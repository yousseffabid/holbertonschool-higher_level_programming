Import-
========
>>> text_indentation = __import__('5-text_indentation').text_indentation

-Function Description-
======================
Print a text with 2 new lines after each of these characters: ., ? and :

-Tests-
=======
>>> text_indentation("string")
string
>>> text_indentation("string. test")
string.
<BLANKLINE>
test
>>> text_indentation(""":  Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
... icimus. Inde sermone vario sex illa a Dipylo \
... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
... beatiorem! Iam ruinas videres""")
:
<BLANKLINE>
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
icimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

>>> text_indentation(":?.")
:
<BLANKLINE>
?
<BLANKLINE>
.
>>> text_indentation("string.")
string.

>>> text_indentation(1223)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(13.0)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(-3)
Traceback (most recent call last):
TypeError: text must be a string
